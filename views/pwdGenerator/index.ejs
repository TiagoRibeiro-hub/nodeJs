<div class="d-flex justify-content-center mt-5">
    <h2>Password Generator</h2>
</div>
<div class="d-flex justify-content-center mt-5">
    <div class="pwd-container">
        <div class="input-group mb-4">
            <input id="valuePwd" type="text" class="form-control" aria-describedby="valuePwd" readonly>
            <button type="button" id="copyPwd" class="input-group-text btn btn-light border-start"><i class="fa-regular fa-copy"></i></button>
        </div>
        <div class="row">
            <div class="col-sm-6 col-md-6 mb-3">
                <div class="checkbox-container">
                    <div class="d-flex justify-content-between pe-3 ps-3">
                        <label class="form-check-label" for="upperCase">Allow Upper Case</label>
                        <input id="upperCase" class="form-check-input" type="checkbox" checked>
                    </div>
                    <div class="d-flex justify-content-between pe-3 ps-3">
                        <label class="form-check-label" for="lowerCase">Allow Lower Case</label>
                        <input id="lowerCase" class="form-check-input" type="checkbox" checked>
                    </div>
                </div>
            </div>
            <div class="col-sm-6 col-md-6 mb-3">
                <div class="checkbox-container">
                    <div class="d-flex justify-content-between pe-3 ps-3">
                        <label class="form-check-label" for="numbers">Allow Numbers</label>
                        <input id="numbers" class="form-check-input" type="checkbox" checked>
                    </div>
                    <div class="d-flex justify-content-between pe-3 ps-3">
                        <label class="form-check-label" for="symbols">Allow Symbols</label>
                        <input id="symbols" class="form-check-input" type="checkbox" checked>
                    </div>
                </div>
            </div>
            <div class="col-sm-6 col-md-6 mb-3">
                <div class="checkbox-container">
                    <div class="d-flex justify-content-between pe-3 ps-3">
                        <label class="form-check-label" for="excludeDuplicates">Exclude Duplicate Characters</label>
                        <input id="excludeDuplicates" class="form-check-input" type="checkbox">
                    </div>
                </div>
            </div>
            <div class="col-sm-6 col-md-6 mb-3">
                <div class="checkbox-container">
                    <div class="d-flex justify-content-between pe-3 ps-3">
                        <label class="form-check-label" for="inlineCheckbox1">Password Length</label>
                        <input id="pwdLength" class="form-check-input float-end pwd-length" type="number" class="form-control">
                    </div>
                </div>
            </div>
            <div class="col-sm-12 col-md-12 mb-3">
                <div class="checkbox-container d-flex justify-content-end align-items-center pe-3 ps-3">
                    <label id="lbl-error" class="text-danger me-5"></label>
                    <button type="button" id="setPwd" class="btn btn-light">Set</button>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    class PwdGenerate {
        constructor(pwdLength = 8, upperCase = true, lowerCase = true, numbers = true, symbols = true, excludeDuplicates = true) {
            this._pwdLength = pwdLength;
            this._upperCase = upperCase;
            this._lowerCase = lowerCase;
            this._numbers = numbers;
            this._symbols = symbols;
            this._excludeDuplicates = excludeDuplicates;
        }

        set setPwdLength(value) {
            this._pwdLength = value;
        }
        set setUpperCase(value) {
            this._upperCase = value;
        }
        set setLowerCase(value) {
            this._lowerCase = value;
        }
        set setNumbers(value) {
            this._numbers = value;
        }
        set setSymbols(value) {
            this._symbols = value;
        }
        set setExcludeDuplicates(value) {
            this._excludeDuplicates = value;
        }

        get() {

        }
    }

    let pwdGenerate = new PwdGenerate();
    const minimumAdvisable = pwdGenerate._pwdLength;

    const pwdLength = document.getElementById("pwdLength");
    const lblError = document.getElementById("lbl-error");
    const valuePwd = document.getElementById("valuePwd");
    const setPwd = document.getElementById("setPwd");
    const copyPwd = document.getElementById("copyPwd");

    pwdLength.value = minimumAdvisable;

    pwdLength.addEventListener('change', function(e) {

        const value = parseInt(this.value);

        if (value < 8) {
            pwdLength.value = minimumAdvisable;
            setLblError("Minimum Advisable is 8.");
        } else if (value > 200) {
            pwdLength.value = 200;
            setLblError("Maximum value is 200.");
        } else {
            pwdGenerate.setPwdLength = this.value;
        };

        function setLblError(text) {
            lblError.innerHTML = text;
            const myTimeout = setTimeout(function() {
                lblError.innerHTML = "";
                clearTimeout(myTimeout);
            }, 5000);
        }
    });

    document.body.addEventListener('change', function(e) {
        const target = e.target;
        switch (target.id) {
            case 'upperCase':
                pwdGenerate.setUpperCase = target.checked;
                break;
            case 'lowerCase':
                pwdGenerate.setLowerCase = target.checked;
                break;
            case 'numbers':
                pwdGenerate.setNumbers = target.checked;
                break;
            case 'symbols':
                pwdGenerate.setSymbols = target.checked;
                break;
            case 'excludeDuplicates':
                pwdGenerate.setExcludeDuplicates = target.checked;
                break;
        }
    });

    setPwd.addEventListener('click', function() {
        valuePwd.readOnly = false;
        valuePwd.value = pwdGenerate.get();
        valuePwd.readOnly = true;
    })

    copyPwd.addEventListener('click', function() {
        navigator.clipboard.writeText(copyText.value);
    })
</script>